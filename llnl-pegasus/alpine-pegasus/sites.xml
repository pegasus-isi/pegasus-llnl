<?xml version="1.0" encoding="UTF-8"?>

<!-- This stuff at the beginning is just boilerplate -->
<sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-4.0.xsd" version="4.0">

    <!-- The local site contains information about the submit host -->
    <!-- The arch and os keywords are used to match binaries in the transformation catalog -->
    <site handle="local" arch="x86_64" os="LINUX">
      <directory type="shared-scratch" path="${WF_DIR}/LOCAL/scratch">
           <file-server operation="all" url="file:///${WF_DIR}/LOCAL/scratch"/>
        </directory>
        <!-- Storage is where pegasus stores output files -->
        <directory type="local-storage" path="${WF_DIR}/output">
            <file-server operation="all" url="file://${WF_DIR}/output"/>
        </directory>


  </site>

    <!-- This site is a Condor pool running on localhost. Normally this site would 
         have many different machines in it, but for this tutorial it is just a 
         "Personal Condor" pool. Really, the local site and PegasusVM are the same,
         we just distinguish between them in this tutorial for illustrative purposes. -->
    <site handle="catalyst" arch="x86_64" os="LINUX">

        <!-- These are the paths on the PegasusVM site where Pegasus stores data -->
        <!-- Scratch is where Pegasus stores intermediate files -->
        <directory type="shared-scratch" path="/p/lscratchd/${USER}">
            <file-server operation="all" url="file:///p/lscratchd/${USER}"/>
        </directory>
        <!-- Storage is where pegasus stores output files -->
        <directory type="local-storage" path="${WF_DIR}/output">
            <file-server operation="all" url="file://${WF_DIR}/output"/>
        </directory>

        <!-- These profiles tell Pegasus that the PegasusVM site is a plain Condor pool -->
        
        <profile namespace="pegasus" key="style">condor</profile>
        <profile namespace="condor" key="universe">local</profile>
        <!-- we need this to make slurm job id's are picked -->
	<profile namespace="condor" key="getenv">true</profile>

        <!-- run auxillary jobs on submit node -->
	<profile namespace="pegasus" key="auxillary.local">true</profile>

        <!-- This profile tells Pegasus where the worker package is installed -->
        <profile namespace="env" key="PEGASUS_HOME">/usr/gapps/wf/pegasus/pegasus-4.7.5dev/</profile>
    </site>
</sitecatalog>
